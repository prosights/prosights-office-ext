name: Publish Docker image to private registry

on:
  push:
    branches:
      - main
      - dev

jobs:
  push_to_registry:
    name: Push Docker image to GCP Artifact Registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    strategy:
      matrix:
        service:
          - office

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: us-east1-docker.pkg.dev/prosights-platform/prosights/${{ matrix.service }}-image

      - name: Set vercel git commit sha
        run: |
          echo "NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA=${{ github.sha }}" >> .env.build
          echo "UPPERCASE_BRANCH=$(echo ${{ github.ref_name }} | tr '[:lower:]' '[:upper:]')" >> $GITHUB_ENV

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker for GCP Artifact Registry
        run: |
          gcloud auth configure-docker us-east1-docker.pkg.dev

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        id: build-and-push
        env:
          UPPERCASE_BRANCH: ${{ env.UPPERCASE_BRANCH }}
        with:
          context: ./ProSights Office
          file: ./ProSights Office/Dockerfile
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            us-east1-docker.pkg.dev/prosights-platform/prosights/${{ matrix.service }}-image:${{ github.sha }}
            ${{ github.ref == 'refs/heads/main' && format('us-east1-docker.pkg.dev/prosights-platform/prosights/{0}-image:latest', matrix.service) || format('us-east1-docker.pkg.dev/prosights-platform/prosights/{0}-image:dev', matrix.service) }}
          labels: ${{ steps.meta.outputs.labels }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
